; Reversible Fibonacci calculator using RISA
; Demonstrates provably reversible computation with zero trail overhead

main:
    ; Create checkpoint for time-travel demonstration
    CHECKPOINT start
    
    ; Initialize Fibonacci sequence
    LI R0, 0            ; F(0) = 0
    LI R1, 1            ; F(1) = 1
    LI R2, 8            ; Calculate first 8 Fibonacci numbers (reduced for testing)
    LI R3, 0            ; Counter
    LI R4, 0            ; Temp register for calculations
    
    ; Mark tape position for sequence (SDM will handle paging)
    TAPEMARK fibonacci_seq
    
    ; Write first two numbers to tape
    TAPEWRITE R0, 8     ; Write F(0) = 0
    TAPEADVANCE 8
    TAPEWRITE R1, 8     ; Write F(1) = 1
    TAPEADVANCE 8
    
    ; Write counter to check
    LI R3, 2            ; We've written 2 numbers already
    
loop:
    ; Check if we've calculated enough numbers
    EQUAL R5, R3, R2    ; Check if counter == limit
    BNZ R5, done        ; If equal, we're done
    
    ; Calculate next Fibonacci number reversibly
    ; F(n) = F(n-1) + F(n-2), preserving all values
    RADD R0, R1, R4     ; R4 = 0 + F(n-2) + F(n-1)
    
    ; Write to tape (SDM automatically versions pages)
    TAPEWRITE R4, 8
    TAPEADVANCE 8
    
    ; Rotate values for next iteration using swaps
    ; This preserves all information (no destruction)
    SWAP R0, R1         ; R0 = F(n-1), R1 = F(n-2)
    SWAP R1, R4         ; R1 = F(n), R4 = F(n-2)
    
    ; Clear R4 for next calculation (reversibly)
    RSUB R4, R4, R4     ; R4 = R4 - R4 - R4 = -R4 (effectively 0)
    
    ; Increment counter using SWAP trick
    LI R6, 1
    LI R7, 0
    RADD R3, R6, R7     ; R7 = 0 + R3 + 1 = R3 + 1
    SWAP R3, R7         ; R3 = R3 + 1, R7 = old R3
    
    JMP loop

done:
    DEBUG Fibonacci sequence calculated
    
    ; Demonstrate reading back the sequence
    TAPESEEKMARK fibonacci_seq
    
    ; Read and display first few values
    TAPEREAD R0, 8      ; Read F(0)
    DEBUG F(0) read
    TAPEADVANCE 8
    
    TAPEREAD R1, 8      ; Read F(1)
    DEBUG F(1) read
    TAPEADVANCE 8
    
    TAPEREAD R2, 8      ; Read F(2)
    DEBUG F(2) read
    TAPEADVANCE 8
    
    TAPEREAD R3, 8      ; Read F(3)
    DEBUG F(3) read
    TAPEADVANCE 8
    
    TAPEREAD R4, 8      ; Read F(4)
    DEBUG F(4) read
    
    DEBUG Program complete - ready for time travel
    
    ; Demonstrate full reversibility
    ; Uncomment these lines to reverse the entire computation:
    ; REWIND start        ; SDM will restore all memory states
    ; DEBUG Back at start - all computation reversed!
    
    HALT